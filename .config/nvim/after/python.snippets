snippet bp "breakpoint" b
ipdb.set_trace()
endsnippet

snippet main "__main__" b
if __name__ == "__main__":
endsnippet

snippet approx "pytest approx" b
pytest.approx($0, rel=eps)
endsnippet

# Jupytext snippets

snippet cell "Python cell" b
# %% $0
endsnippet

snippet mdcell "Markdown cell" b
# %% [markdown]
"""
$0
"""
endsnippet

snippet pf "printf" b
print(f"$0")
endsnippet

snippet dc "dataclass" b
@dataclass(kw_only=True)
class $0:
endsnippet

snippet mk "math" i
$$1$$0
endsnippet

snippet try "try/except" 
try:
	${1:${VISUAL:pass}}
except ${2:Exception} as ${3:e}:
	${4:raise $3}
endsnippet

snippet db "try/except: debug" 
try:
	${1:${VISUAL:pass}}
except ${2:Exception} as ${3:e}:
	import ipdb
	ipdb.set_trace()
endsnippet
